// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.


// Generated by Quartus II 64-Bit Version 13.0 (Build Build 232 06/12/2013)
// Created on Tue May 09 12:54:33 2017

mux81_module mux81_module_inst
(
	.CSn(CSn_sig) ,	// input  CSn_sig
	.A(A_sig) ,	// input [2:0] A_sig
	.D0(D0_sig) ,	// input [width-1:0] D0_sig
	.D1(D1_sig) ,	// input [width-1:0] D1_sig
	.D2(D2_sig) ,	// input [width-1:0] D2_sig
	.D3(D3_sig) ,	// input [width-1:0] D3_sig
	.D4(D4_sig) ,	// input [width-1:0] D4_sig
	.D5(D5_sig) ,	// input [width-1:0] D5_sig
	.D6(D6_sig) ,	// input [width-1:0] D6_sig
	.D7(D7_sig) ,	// input [width-1:0] D7_sig
	.Y(Y_sig) 	// output [width-1:0] Y_sig
);

defparam mux81_module_inst.width = 1;
