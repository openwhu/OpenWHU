// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version"

// DATE "05/09/2017 09:47:29"

// 
// Device: Altera EP4CE6F17C8 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module pencode83 (
	CLK,
	Sw_In,
	LED_Out,
	Valid);
input 	CLK;
input 	[7:0] Sw_In;
output 	[2:0] LED_Out;
output 	Valid;

// Design Ports Information
// LED_Out[0]	=>  Location: PIN_A5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// LED_Out[1]	=>  Location: PIN_B5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// LED_Out[2]	=>  Location: PIN_A4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Valid	=>  Location: PIN_B4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Sw_In[7]	=>  Location: PIN_N13,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Sw_In[5]	=>  Location: PIN_M12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Sw_In[6]	=>  Location: PIN_N14,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Sw_In[3]	=>  Location: PIN_N15,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Sw_In[1]	=>  Location: PIN_P15,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Sw_In[2]	=>  Location: PIN_P16,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Sw_In[4]	=>  Location: PIN_N16,	 I/O Standard: 2.5 V,	 Current Strength: Default
// CLK	=>  Location: PIN_E1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Sw_In[0]	=>  Location: PIN_R16,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("pencode83_v.sdo");
// synopsys translate_on

wire \LED_Out[0]~output_o ;
wire \LED_Out[1]~output_o ;
wire \LED_Out[2]~output_o ;
wire \Valid~output_o ;
wire \CLK~input_o ;
wire \CLK~inputclkctrl_outclk ;
wire \Sw_In[5]~input_o ;
wire \Sw_In[3]~input_o ;
wire \Sw_In[2]~input_o ;
wire \Sw_In[4]~input_o ;
wire \U1|y~0_combout ;
wire \Sw_In[6]~input_o ;
wire \U1|y~1_combout ;
wire \U1|y~2_combout ;
wire \U1|y~3_combout ;
wire \Sw_In[7]~input_o ;
wire \U1|Valid~0_combout ;
wire \Sw_In[1]~input_o ;
wire \Sw_In[0]~input_o ;
wire \U1|Valid~1_combout ;
wire \U1|Valid~2_combout ;
wire \U1|Valid~q ;
wire [2:0] \U1|y ;


// Location: IOOBUF_X7_Y24_N16
cycloneive_io_obuf \LED_Out[0]~output (
	.i(\U1|y [0]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LED_Out[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \LED_Out[0]~output .bus_hold = "false";
defparam \LED_Out[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X5_Y24_N9
cycloneive_io_obuf \LED_Out[1]~output (
	.i(\U1|y [1]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LED_Out[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \LED_Out[1]~output .bus_hold = "false";
defparam \LED_Out[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X5_Y24_N16
cycloneive_io_obuf \LED_Out[2]~output (
	.i(\U1|y [2]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LED_Out[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \LED_Out[2]~output .bus_hold = "false";
defparam \LED_Out[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X5_Y24_N23
cycloneive_io_obuf \Valid~output (
	.i(\U1|Valid~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Valid~output_o ),
	.obar());
// synopsys translate_off
defparam \Valid~output .bus_hold = "false";
defparam \Valid~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N8
cycloneive_io_ibuf \CLK~input (
	.i(CLK),
	.ibar(gnd),
	.o(\CLK~input_o ));
// synopsys translate_off
defparam \CLK~input .bus_hold = "false";
defparam \CLK~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \CLK~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\CLK~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\CLK~inputclkctrl_outclk ));
// synopsys translate_off
defparam \CLK~inputclkctrl .clock_type = "global clock";
defparam \CLK~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X34_Y2_N15
cycloneive_io_ibuf \Sw_In[5]~input (
	.i(Sw_In[5]),
	.ibar(gnd),
	.o(\Sw_In[5]~input_o ));
// synopsys translate_off
defparam \Sw_In[5]~input .bus_hold = "false";
defparam \Sw_In[5]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X34_Y7_N15
cycloneive_io_ibuf \Sw_In[3]~input (
	.i(Sw_In[3]),
	.ibar(gnd),
	.o(\Sw_In[3]~input_o ));
// synopsys translate_off
defparam \Sw_In[3]~input .bus_hold = "false";
defparam \Sw_In[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X34_Y5_N22
cycloneive_io_ibuf \Sw_In[2]~input (
	.i(Sw_In[2]),
	.ibar(gnd),
	.o(\Sw_In[2]~input_o ));
// synopsys translate_off
defparam \Sw_In[2]~input .bus_hold = "false";
defparam \Sw_In[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X34_Y7_N22
cycloneive_io_ibuf \Sw_In[4]~input (
	.i(Sw_In[4]),
	.ibar(gnd),
	.o(\Sw_In[4]~input_o ));
// synopsys translate_off
defparam \Sw_In[4]~input .bus_hold = "false";
defparam \Sw_In[4]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X33_Y5_N0
cycloneive_lcell_comb \U1|y~0 (
// Equation(s):
// \U1|y~0_combout  = (!\Sw_In[4]~input_o  & ((\Sw_In[3]~input_o ) # ((\Sw_In[1]~input_o  & !\Sw_In[2]~input_o ))))

	.dataa(\Sw_In[1]~input_o ),
	.datab(\Sw_In[3]~input_o ),
	.datac(\Sw_In[2]~input_o ),
	.datad(\Sw_In[4]~input_o ),
	.cin(gnd),
	.combout(\U1|y~0_combout ),
	.cout());
// synopsys translate_off
defparam \U1|y~0 .lut_mask = 16'h00CE;
defparam \U1|y~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X34_Y4_N22
cycloneive_io_ibuf \Sw_In[6]~input (
	.i(Sw_In[6]),
	.ibar(gnd),
	.o(\Sw_In[6]~input_o ));
// synopsys translate_off
defparam \Sw_In[6]~input .bus_hold = "false";
defparam \Sw_In[6]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X33_Y5_N16
cycloneive_lcell_comb \U1|y~1 (
// Equation(s):
// \U1|y~1_combout  = (\Sw_In[7]~input_o ) # ((!\Sw_In[6]~input_o  & ((\Sw_In[5]~input_o ) # (\U1|y~0_combout ))))

	.dataa(\Sw_In[7]~input_o ),
	.datab(\Sw_In[5]~input_o ),
	.datac(\U1|y~0_combout ),
	.datad(\Sw_In[6]~input_o ),
	.cin(gnd),
	.combout(\U1|y~1_combout ),
	.cout());
// synopsys translate_off
defparam \U1|y~1 .lut_mask = 16'hAAFE;
defparam \U1|y~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X33_Y5_N17
dffeas \U1|y[0] (
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\U1|y~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\U1|y [0]),
	.prn(vcc));
// synopsys translate_off
defparam \U1|y[0] .is_wysiwyg = "true";
defparam \U1|y[0] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X33_Y5_N2
cycloneive_lcell_comb \U1|y~2 (
// Equation(s):
// \U1|y~2_combout  = (!\Sw_In[5]~input_o  & (!\Sw_In[4]~input_o  & ((\Sw_In[3]~input_o ) # (\Sw_In[2]~input_o ))))

	.dataa(\Sw_In[5]~input_o ),
	.datab(\Sw_In[3]~input_o ),
	.datac(\Sw_In[2]~input_o ),
	.datad(\Sw_In[4]~input_o ),
	.cin(gnd),
	.combout(\U1|y~2_combout ),
	.cout());
// synopsys translate_off
defparam \U1|y~2 .lut_mask = 16'h0054;
defparam \U1|y~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X33_Y5_N26
cycloneive_lcell_comb \U1|y~3 (
// Equation(s):
// \U1|y~3_combout  = (\Sw_In[7]~input_o ) # ((\U1|y~2_combout ) # (\Sw_In[6]~input_o ))

	.dataa(\Sw_In[7]~input_o ),
	.datab(\U1|y~2_combout ),
	.datac(gnd),
	.datad(\Sw_In[6]~input_o ),
	.cin(gnd),
	.combout(\U1|y~3_combout ),
	.cout());
// synopsys translate_off
defparam \U1|y~3 .lut_mask = 16'hFFEE;
defparam \U1|y~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X33_Y5_N27
dffeas \U1|y[1] (
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\U1|y~3_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\U1|y [1]),
	.prn(vcc));
// synopsys translate_off
defparam \U1|y[1] .is_wysiwyg = "true";
defparam \U1|y[1] .power_up = "low";
// synopsys translate_on

// Location: IOIBUF_X34_Y2_N22
cycloneive_io_ibuf \Sw_In[7]~input (
	.i(Sw_In[7]),
	.ibar(gnd),
	.o(\Sw_In[7]~input_o ));
// synopsys translate_off
defparam \Sw_In[7]~input .bus_hold = "false";
defparam \Sw_In[7]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X33_Y5_N12
cycloneive_lcell_comb \U1|Valid~0 (
// Equation(s):
// \U1|Valid~0_combout  = (\Sw_In[6]~input_o ) # ((\Sw_In[5]~input_o ) # ((\Sw_In[7]~input_o ) # (\Sw_In[4]~input_o )))

	.dataa(\Sw_In[6]~input_o ),
	.datab(\Sw_In[5]~input_o ),
	.datac(\Sw_In[7]~input_o ),
	.datad(\Sw_In[4]~input_o ),
	.cin(gnd),
	.combout(\U1|Valid~0_combout ),
	.cout());
// synopsys translate_off
defparam \U1|Valid~0 .lut_mask = 16'hFFFE;
defparam \U1|Valid~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X33_Y5_N13
dffeas \U1|y[2] (
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\U1|Valid~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\U1|y [2]),
	.prn(vcc));
// synopsys translate_off
defparam \U1|y[2] .is_wysiwyg = "true";
defparam \U1|y[2] .power_up = "low";
// synopsys translate_on

// Location: IOIBUF_X34_Y4_N15
cycloneive_io_ibuf \Sw_In[1]~input (
	.i(Sw_In[1]),
	.ibar(gnd),
	.o(\Sw_In[1]~input_o ));
// synopsys translate_off
defparam \Sw_In[1]~input .bus_hold = "false";
defparam \Sw_In[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X34_Y5_N15
cycloneive_io_ibuf \Sw_In[0]~input (
	.i(Sw_In[0]),
	.ibar(gnd),
	.o(\Sw_In[0]~input_o ));
// synopsys translate_off
defparam \Sw_In[0]~input .bus_hold = "false";
defparam \Sw_In[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X33_Y5_N28
cycloneive_lcell_comb \U1|Valid~1 (
// Equation(s):
// \U1|Valid~1_combout  = (\Sw_In[2]~input_o ) # ((\Sw_In[1]~input_o ) # ((\Sw_In[0]~input_o ) # (\Sw_In[3]~input_o )))

	.dataa(\Sw_In[2]~input_o ),
	.datab(\Sw_In[1]~input_o ),
	.datac(\Sw_In[0]~input_o ),
	.datad(\Sw_In[3]~input_o ),
	.cin(gnd),
	.combout(\U1|Valid~1_combout ),
	.cout());
// synopsys translate_off
defparam \U1|Valid~1 .lut_mask = 16'hFFFE;
defparam \U1|Valid~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X33_Y5_N22
cycloneive_lcell_comb \U1|Valid~2 (
// Equation(s):
// \U1|Valid~2_combout  = (\U1|Valid~1_combout ) # (\U1|Valid~0_combout )

	.dataa(gnd),
	.datab(\U1|Valid~1_combout ),
	.datac(gnd),
	.datad(\U1|Valid~0_combout ),
	.cin(gnd),
	.combout(\U1|Valid~2_combout ),
	.cout());
// synopsys translate_off
defparam \U1|Valid~2 .lut_mask = 16'hFFCC;
defparam \U1|Valid~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X33_Y5_N23
dffeas \U1|Valid (
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\U1|Valid~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\U1|Valid~q ),
	.prn(vcc));
// synopsys translate_off
defparam \U1|Valid .is_wysiwyg = "true";
defparam \U1|Valid .power_up = "low";
// synopsys translate_on

assign LED_Out[0] = \LED_Out[0]~output_o ;

assign LED_Out[1] = \LED_Out[1]~output_o ;

assign LED_Out[2] = \LED_Out[2]~output_o ;

assign Valid = \Valid~output_o ;

endmodule
