--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_bua
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode2009w[1..0]	: WIRE;
	w_anode2018w[3..0]	: WIRE;
	w_anode2035w[3..0]	: WIRE;
	w_anode2045w[3..0]	: WIRE;
	w_anode2055w[3..0]	: WIRE;
	w_anode2065w[3..0]	: WIRE;
	w_anode2075w[3..0]	: WIRE;
	w_anode2085w[3..0]	: WIRE;
	w_anode2095w[3..0]	: WIRE;
	w_anode2107w[1..0]	: WIRE;
	w_anode2114w[3..0]	: WIRE;
	w_anode2125w[3..0]	: WIRE;
	w_anode2135w[3..0]	: WIRE;
	w_anode2145w[3..0]	: WIRE;
	w_anode2155w[3..0]	: WIRE;
	w_anode2165w[3..0]	: WIRE;
	w_anode2175w[3..0]	: WIRE;
	w_anode2185w[3..0]	: WIRE;
	w_data2007w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode2185w[3..3], w_anode2175w[3..3], w_anode2165w[3..3], w_anode2155w[3..3], w_anode2145w[3..3], w_anode2135w[3..3], w_anode2125w[3..3], w_anode2114w[3..3]), ( w_anode2095w[3..3], w_anode2085w[3..3], w_anode2075w[3..3], w_anode2065w[3..3], w_anode2055w[3..3], w_anode2045w[3..3], w_anode2035w[3..3], w_anode2018w[3..3]));
	w_anode2009w[] = ( (w_anode2009w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode2018w[] = ( (w_anode2018w[2..2] & (! w_data2007w[2..2])), (w_anode2018w[1..1] & (! w_data2007w[1..1])), (w_anode2018w[0..0] & (! w_data2007w[0..0])), w_anode2009w[1..1]);
	w_anode2035w[] = ( (w_anode2035w[2..2] & (! w_data2007w[2..2])), (w_anode2035w[1..1] & (! w_data2007w[1..1])), (w_anode2035w[0..0] & w_data2007w[0..0]), w_anode2009w[1..1]);
	w_anode2045w[] = ( (w_anode2045w[2..2] & (! w_data2007w[2..2])), (w_anode2045w[1..1] & w_data2007w[1..1]), (w_anode2045w[0..0] & (! w_data2007w[0..0])), w_anode2009w[1..1]);
	w_anode2055w[] = ( (w_anode2055w[2..2] & (! w_data2007w[2..2])), (w_anode2055w[1..1] & w_data2007w[1..1]), (w_anode2055w[0..0] & w_data2007w[0..0]), w_anode2009w[1..1]);
	w_anode2065w[] = ( (w_anode2065w[2..2] & w_data2007w[2..2]), (w_anode2065w[1..1] & (! w_data2007w[1..1])), (w_anode2065w[0..0] & (! w_data2007w[0..0])), w_anode2009w[1..1]);
	w_anode2075w[] = ( (w_anode2075w[2..2] & w_data2007w[2..2]), (w_anode2075w[1..1] & (! w_data2007w[1..1])), (w_anode2075w[0..0] & w_data2007w[0..0]), w_anode2009w[1..1]);
	w_anode2085w[] = ( (w_anode2085w[2..2] & w_data2007w[2..2]), (w_anode2085w[1..1] & w_data2007w[1..1]), (w_anode2085w[0..0] & (! w_data2007w[0..0])), w_anode2009w[1..1]);
	w_anode2095w[] = ( (w_anode2095w[2..2] & w_data2007w[2..2]), (w_anode2095w[1..1] & w_data2007w[1..1]), (w_anode2095w[0..0] & w_data2007w[0..0]), w_anode2009w[1..1]);
	w_anode2107w[] = ( (w_anode2107w[0..0] & data_wire[3..3]), enable_wire);
	w_anode2114w[] = ( (w_anode2114w[2..2] & (! w_data2007w[2..2])), (w_anode2114w[1..1] & (! w_data2007w[1..1])), (w_anode2114w[0..0] & (! w_data2007w[0..0])), w_anode2107w[1..1]);
	w_anode2125w[] = ( (w_anode2125w[2..2] & (! w_data2007w[2..2])), (w_anode2125w[1..1] & (! w_data2007w[1..1])), (w_anode2125w[0..0] & w_data2007w[0..0]), w_anode2107w[1..1]);
	w_anode2135w[] = ( (w_anode2135w[2..2] & (! w_data2007w[2..2])), (w_anode2135w[1..1] & w_data2007w[1..1]), (w_anode2135w[0..0] & (! w_data2007w[0..0])), w_anode2107w[1..1]);
	w_anode2145w[] = ( (w_anode2145w[2..2] & (! w_data2007w[2..2])), (w_anode2145w[1..1] & w_data2007w[1..1]), (w_anode2145w[0..0] & w_data2007w[0..0]), w_anode2107w[1..1]);
	w_anode2155w[] = ( (w_anode2155w[2..2] & w_data2007w[2..2]), (w_anode2155w[1..1] & (! w_data2007w[1..1])), (w_anode2155w[0..0] & (! w_data2007w[0..0])), w_anode2107w[1..1]);
	w_anode2165w[] = ( (w_anode2165w[2..2] & w_data2007w[2..2]), (w_anode2165w[1..1] & (! w_data2007w[1..1])), (w_anode2165w[0..0] & w_data2007w[0..0]), w_anode2107w[1..1]);
	w_anode2175w[] = ( (w_anode2175w[2..2] & w_data2007w[2..2]), (w_anode2175w[1..1] & w_data2007w[1..1]), (w_anode2175w[0..0] & (! w_data2007w[0..0])), w_anode2107w[1..1]);
	w_anode2185w[] = ( (w_anode2185w[2..2] & w_data2007w[2..2]), (w_anode2185w[1..1] & w_data2007w[1..1]), (w_anode2185w[0..0] & w_data2007w[0..0]), w_anode2107w[1..1]);
	w_data2007w[2..0] = data_wire[2..0];
END;
--VALID FILE
