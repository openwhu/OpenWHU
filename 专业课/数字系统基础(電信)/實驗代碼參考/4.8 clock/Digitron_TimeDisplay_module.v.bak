module Digitron_TimeDisplay_module
(
	CLK, RSTn, AdjtWeek_n, Digitron_Out, DigitronCS_Out,
	SecL, SecH, MinL, MinH, HourL, HourH, Week
);
	 input CLK;
	 input RSTn;
	 input AdjtWeek_n;
	 input [3:0]SecL;		
	 input [3:0]SecH;
	 input [3:0]MinL;		
	 input [3:0]MinH;
	 input [3:0]HourL;		
	 input [3:0]HourH;
	 input [3:0]Week;
	 output [7:0]Digitron_Out; 
	 output [5:0]DigitronCS_Out;

    parameter T100MS = 16'd200;
	 reg [7:0]Count;
	 reg [3:0]SingleNum;
	 reg [7:0]W_Digitron_Out;
	 reg [7:0]W_DigitronCS_Out;
    parameter _0 = 8'b0011_1111, _1 = 8'b0000_0110, _2 = 8'b0101_1011,
			 	  _3 = 8'b0100_1111, _4 = 8'b0110_0110, _5 = 8'b0110_1101,
			 	  _6 = 8'b0111_1101, _7 = 8'b0000_0111, _8 = 8'b0111_1111,
				  _9 = 8'b0110_1111;
				 	
	always @ ( posedge CLK or negedge RSTn )
		begin
			if( (DispWeek == 1) || (AdjtWeek_n == 0) )		//Display Week
				SingleNum = Week;
				
			case(SingleNum)
				0:  W_Digitron_Out = _0;
				1:  W_Digitron_Out = _1;
				2:  W_Digitron_Out = _2;
				3:  W_Digitron_Out = _3;
				4:  W_Digitron_Out = _4;
				5:  W_Digitron_Out = _5;
				6:  W_Digitron_Out = _6;
				7:  W_Digitron_Out = _7;
			endcase
			
			else if( Count == T100MS )
				begin
					Count <= 23'd0;
					//CS左移一位
					W_DigitronCS_Out = {W_DigitronCS_Out[0],W_DigitronCS_Out[5:1]};
					if(W_DigitronCS_Out == 6'd0) W_DigitronCS_Out = 6'b11_1110;
					//取位
					case(W_DigitronCS_Out)
						6'b11_1110: SingleNum = Hex_SixNum[3:0];
						6'b11_1101: SingleNum = Hex_SixNum[7:4];
						6'b11_1011: SingleNum = Hex_SixNum[11:8];
						6'b11_0111: SingleNum = Hex_SixNum[15:12];
						6'b10_1111: SingleNum = Hex_SixNum[19:16];
						6'b01_1111: SingleNum = Hex_SixNum[23:20];
					endcase
					//该位对应数字
					case(SingleNum)
						0:  W_Digitron_Out = _0;
						1:  W_Digitron_Out = _1;
						2:  W_Digitron_Out = _2;
						3:  W_Digitron_Out = _3;
						4:  W_Digitron_Out = _4;
						5:  W_Digitron_Out = _5;
						6:  W_Digitron_Out = _6;
						7:  W_Digitron_Out = _7;
						8:  W_Digitron_Out = _8;
						9:  W_Digitron_Out = _9;
					endcase
				end
			else
				Count <= Count + 1'b1;
	end
		
	assign Digitron_Out = W_Digitron_Out;
	assign DigitronCS_Out = W_DigitronCS_Out;
endmodule