module TimeKeeper_module
(
	CLK, RSTn, s1,s2,s3,s4,k1,k2,k3, Buzzer_Out, Digitron_Out, DigitronCS_Out
);
	input CLK,RSTn;
	input s1,k1;//星期调节输入
	input s2,k2;//小时调节输入
	input s3,k3;//分钟调节输入
	input s4;//s4=0时，数码管显示星期
	output reg [6:0]a_to_g0,a_to_g1,a_to_g2,a_to_g3,a_to_g4,a_to_g5;//七段数码管显示输出
	output reg buzzer;//扬声器输出

	/*
	reg [13:0]clk_count1;//产生1hz时钟的分频计数器
	reg clk_1hz;
	reg [2:0]music_count;//产生扬声器声音频率的分频计数器
	*/
	output reg [3:0]SecL;
	output reg [3:0]SecH;
	output reg [3:0]MinL;
	output reg [3:0]MinH;
	output reg [3:0]HourL;
	output reg [3:0]HourH;
	output reg [3:0]Week;
//	output reg [3:0]disp_temp;


	/**************************************************************
	分频模块
	产生频率分别为1hz（时钟脉冲）,500hz（报时低音）,1khz（报时高音）的信号；
	*************************************************************/
	reg CLK_1HZ=0,CLK_500HZ=0,CLK_1KHZ=0;
	reg [24:0]Count1;
	reg [15:0]Count2;
	reg [14:0]Count3;
	parameter T1HZ = 25'd25_000_000;	//frequency is 1HZ
	parameter T500HZ = 16'd50_000;	//frequency is 500HZ, "di"
	parameter T1KHZ = 15'd25000;		//frequency is 1KHZ, "da"

	always @(posedge CLK or negedge RSTn)
	begin 
		if(!RSTn)
			begin 
				Count1<=0;
				Count2<=0;
				Count3<=0;
			end
		else if(!k1||!k2||!k3) //当小时，分钟，星期有一个要调整时
			CLK_1HZ<=CLK_1HZ;
		else if(Count1==T1hz-25'd1)
			begin
				Count1<=0;
				CLK_1HZ<=~CLK_1HZ;
			end
		else if(Count2==T500hz-16'd1)
			begin
				Count2<=0;
				CLK_500HZ<=~CLK_500HZ;
			end
		else if(Count3==T1khz-15'd1)
			begin
				Count3<=0;
				CLK_1KHZ<=~CLK_1KHZ;
			end
		else
			Count1<=Count1+1;
			Count2<=Count2+1;
			Count3<=Count3+1;
	end
		
	always @ ( posedge CLK_1HZ or negedge RSTn )
		begin
			if( !RSTn )
				begin 
					SecL <= 0;
					SecH <= 0;
					MinL <= 0;
					MinH <= 0;
					HourL <= 0;
					HourH <= 0;
					Week <= 1;
				end
			else
				begin
					if( !AdjtWeek_n )		//While AdjtWeek_n = 0, Adjust Week
						begin  
							if( Week == 'd7 )
								Week <= 1;
							else
								Week <= Week + 1;
						end
					else if( !AdjtHour_n )		//Adjust Hour
						begin 
							if( HourL == 'd9 )
								begin
									HourL <= 0;
									HourH <= HourH + 1;
								end
							else
								begin
									if( HourH == 'd2 && HourL == 'd3 )
										begin
											HourL <= 0;
											HourH <= 0;
										end
									else
										HourL <= HourL + 1;
								end
						end
					else if( !AdjtMin_n ) 		//Adjust Minute
						begin
							if( MinL == 'd9)
								begin
									MinL <= 0;
									if(MinH == 'd5)
										MinH <= 0;
									else
										MinH <= MinH + 1;
								end					
							else 
								MinL <= MinL + 1;	
						end
					else if( SecL == 'd9 )		//Clock Working
						begin 
							SecL <= 0;
							if( SecH == 'd5 )
								begin
									SecH <= 0;
									if( MinL == 'd9 )
										begin
											MinL <= 0;
											if( MinH == 'd5 )
												begin
													MinH <= 0;
													if( HourL == 'd9 )
														begin
															HourL <= 0;
															HourH <= HourH + 1;
														end
													else if( HourH == 'd2 && HourL == 'd3 )
														begin
															HourL <= 0;
															HourH <= 0;
															if( Week == 7 )													
																Week <= 1;
															else
																Week <= Week + 1;															
														end
													else
														HourL <= HourL + 1;
												end
											else
												MinH <= MinH + 1;
										end
									else
										MinL <= MinL + 1;
								end
							else
								SecH <= SecH + 1;
						end
					else
						SecL <= SecL + 1;
				/*end*/
		end