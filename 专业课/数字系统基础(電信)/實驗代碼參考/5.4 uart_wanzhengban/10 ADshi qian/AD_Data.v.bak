module AD_Data
(
	CLK, RSTn, AD_Data_In, AD_EOC, AD_CSn, AD_Clk, AD_Address, Data_Out  
);

	 input CLK;
	 input RSTn;
	 input AD_EOC;
	 input AD_Data_In;
	 output AD_CSn;
	 output AD_Clk;
	 output AD_Address;
	 output [9:0]Data_Out;
	 
	 reg [7:0]Cnt;
	 reg Cnt_en;
	 
	always @ ( posedge CLK or negedge RSTn )
		begin
			if( !RSTn )
				begin
					Cnt <= 8'd0;
				end
			else if( Cnt == 8'd249 )
				begin
					Cnt <= 8'b0;
				end
			else if( Cnt_en )
				begin
					Cnt <= Cnt + 1'b1;
				end
			else 
				Cnt <= 8'b0;			
		end

	 reg [6:0]Cnt1;
	 reg Cnt1_en;
	 
	always @ ( posedge CLK or negedge RSTn )
		begin
			if( !RSTn )
				begin
					Cnt1 <= 7'd0;
				end
		/*	else if( Cnt == 8'd249 )
				begin
					Cnt <= 8'b0;
				end*/
			else if( Cnt1_en )
				begin
					Cnt1 <= Cnt1 + 1'b1;
				end
			else 
				Cnt1 <= 7'b0;			
		end
	 
	 reg [9:0]Cnt2;
	 reg Cnt2_en;

	always @ ( posedge CLK or negedge RSTn )
		begin
			if( !RSTn )
				begin
					Cnt2 <= 10'd0;
				end
		/*	else if( Cnt == 8'd249 )
				begin
					Cnt <= 8'b0;
				end*/
			else if( Cnt1_en )
				begin
					Cnt1 <= Cnt1 + 1'b1;
				end
			else 
				Cnt1 <= 7'b0;			
		end	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	